name: For each commit and PR
on:
  push:
  pull_request:

jobs:
  validation:
    runs-on: ubuntu-latest
    env:
      CGO_ENABLED: 0
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.14.6'
    - name: goimports
      run: go get golang.org/x/tools/cmd/goimports && goimports -d . | (! grep .)
    - name: go vet
      run: go vet ./...
    - name: golangci-lint
      uses: golangci/golangci-lint-action@v1
      with:
        version: v1.30
        args: -v -D errcheck
    - name: go test
      run: go test -v ./...
    - name: go test coverage
      run: go test -coverprofile=coverage.txt ./...
    - name: upload codecov
      run: bash <(curl -s https://codecov.io/bash)
    - name: Build binaries
      run: go build
    - name: Upload boots binary
      uses: actions/upload-artifact@v2
      with:
        name: boots
        path: ./boots
  docker-images:
    runs-on: ubuntu-latest
    needs: [validation]
    steps:
    - name: Docker Image Tag for Sha
      id: docker-image-tag
      run: |
        echo ::set-output name=tags::quay.io/tinkerbell/boots:latest,quay.io/tinkerbell/boots:sha-${GITHUB_SHA::8}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Download boots binary
      uses: actions/download-artifact@v2
      with:
        name: boots
        path: ./boots
    - name: set boots permission
      run: chmod +x  ./boots
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to quay.io
      uses: docker/login-action@v1
      with:
        registry: quay.io
        username: ${{ secrets.QUAY_USERNAME }}
        password: ${{ secrets.QUAY_PASSWORD }}
    - name: quay.io/tinkerbell/boots
      uses: docker/build-push-action@v2
      with:
        context: ./
        file: ./Dockerfile
        cache-from: type=registry,ref=quay.io/tinkerbell/boots:latest
        push: ${{ startsWith(github.ref, 'refs/heads/master') }}
        tags: ${{ steps.docker-image-tag.outputs.tags }}
