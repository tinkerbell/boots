---
quay_settings: &quay_settings
  registry: quay.io
  repo: quay.io/tinkerbell/boots
  username:
    from_secret: docker_username
  password:
    from_secret: docker_password

publish_tmpl: &publish_tmpl
  image: plugins/docker
  depends_on:
    - build
    - fmt
    - lint
    - test

quay_settings_pr: &quay_settings_pr
  registry: quay.io
  repo: quay.io/tinkerbell/boots-pr
  username:
    from_secret: public_docker_username
  password:
    from_secret: public_docker_password

kind: pipeline
type: docker
name: default

steps:
  - name: lint
    image: golangci/golangci-lint:v1.24.0
    commands:
      - golangci-lint run -v -D errcheck

  - name: fmt
    image: golang:1.13-alpine
    commands:
      - set -o pipefail
      - apk add --update --upgrade --no-cache git
      - go get golang.org/x/tools/cmd/goimports
      - goimports -d . | (! grep .)

  - name: test
    image: golang:1.13-alpine
    commands:
      - CGO_ENABLED=0 go test -mod=vendor -v ./...

  - name: build
    image: golang:1.13-alpine
    commands:
      - CGO_ENABLED=0 go build -mod=vendor

  - name: publish pr
    <<: *publish_tmpl
    settings:
      <<: *quay_settings_pr
      tags:
        - pr${DRONE_PULL_REQUEST}
        - pr${DRONE_PULL_REQUEST}-${DRONE_BUILD_NUMBER}-${DRONE_COMMIT_SHA}
    when:
      event: pull_request

  - name: publish master
    <<: *publish_tmpl
    settings:
      <<: *quay_settings
      tags:
        - latest
        - ${DRONE_BUILD_NUMBER}-${DRONE_COMMIT_SHA}
    when:
      event: push
      branch: master

  - name: publish tag
    <<: *publish_tmpl
    settings:
      <<: *quay_settings
      tags:
        - ${DRONE_TAG}
    when:
      event: tag
